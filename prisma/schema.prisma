generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  email          String?       @unique
  name           String?
  emailVerified  DateTime?     @map("email_verified")
  image          String?
  isRegistered   Boolean?      @default(false)
  role           Role          @default(USER)
  createdAt      DateTime      @default(now()) @map("created_at")
  updatedAt      DateTime      @default(now()) @map("updated_at")
  organizationId Int?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  posts          Post[]

  @@map("users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map("compound_id")
  userId             Int       @map("user_id")
  providerType       String    @map("provider_type")
  providerId         String    @map("provider_id")
  providerAccountId  String    @map("provider_account_id")
  refreshToken       String?   @map("refresh_token")
  accessToken        String?   @map("access_token")
  accessTokenExpires DateTime? @map("access_token_expires")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @default(now()) @map("updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map("accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map("user_id")
  expires      DateTime
  sessionToken String   @unique @map("session_token")
  accessToken  String   @unique @map("access_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @default(now()) @map("updated_at")

  @@map("sessions")
}

model VerificationRequest {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @default(now()) @map("updated_at")

  @@map("verification_requests")
}

model Organization {
  id       Int       @id @default(autoincrement())
  email    String?   @unique
  name     String    @unique
  address  Address?
  document Document?
  phone    String?
  website  String?
  logo     String?
  users    User[]

  @@map("organizations")
}

model Address {
  id             Int           @id @default(autoincrement())
  street         String?
  city           String?
  state          String?
  country        String?
  zip            String?
  organization   Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?
}

model Document {
  id                Int           @id @default(autoincrement())
  formalAppLetter   String?
  constitution      String?
  byLaws            String?
  registrationPaper String?
  membership        String?
  organization      Organization? @relation(fields: [organizationId], references: [id])
  organizationId    Int?
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String
  category  Category @default(NEWS)
  authorId  Int?
  author    User?    @relation(fields: [authorId], references: [id])
}

enum Role {
  USER
  MEMBER
  ADMIN
}

enum Category {
  NEWS
  PUBLICATION
  INFORMATIONBOARD
}
